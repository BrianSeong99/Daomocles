import Head from "next/head";
import axios from 'axios';
import { FormEvent, useState, useEffect } from "react";
import Navbar from "../components/navbar";
import SettingNavbar from "../components/settingnavbar";
import AddToken from "../components/addToken";
// import { ProposalList } from "../components/proposalList";
// import { useData } from "../contexts/dataContext";
import styles from "../styles/Home.module.css";

export default function Home() {
    let daoname = ""
    let daoaccess = ""
    if (typeof window !== "undefined") {
        const queryParameters = new URLSearchParams(window.location.search)
        daoname = queryParameters.get("DAO")
        daoaccess = queryParameters.get("permission")
    }
    interface TokenInterface {
        name: string;
        address: string;
        network: number;
        symbol: string;
        priceURL: string;
      }
    // interface TokenAssets {
    //     network: string;
    //     contractAddress: string;
    //     tokenName: string;
    // }
    // interface TokenAssetsInterface {
    //     assets: Array<TokenAssets>;
    // }

    const [networkId, setNetworkId] = useState(0);
    const [contractAddress, setContractAddress] = useState("");
    const [tokenName, setTokenName] = useState("");
    const [tokenAssets, setTokenAssets] = useState<TokenInterface[]>([])

    const tokenAssets: TokenAssetsInterface = {
        assets: [{
            network: "Polygon",
            contractAddress: "0xc2132D05D31c914a87C6611C10748AEb04B58e8F",
            tokenName: "USDT"
        },
        {
            network: "Ethereum",
            contractAddress: "0x9E32b13ce7f2E80A01932B42553652E053D6ed8e",
            tokenName: "Metis"
        },
        {
            network: "Ethereum",
            contractAddress: "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D",
            tokenName: "BAYC"
        },
    ]
    }

    useEffect(() => {
        // Make an asynchronous request to the server using axios with parameters
        axios.get<TokenInterface[]>(process.env.BASE_URL+':address/:daoID/token' )
          .then(response => setTokenAssets(response.data))
          .catch(error => console.error(error));
        // console.log("")
      }, []);

    const onAddToken = () => {
        console.log("before in  add token function")
        // console.log("see url", process.env.BASE_URL+'/0xjisjeif/28938492/token/info')
        axios.get<TokenInterface[]>('localhost:3001/0xjisjeif/28938492/token/info',  { address: contractAddress, network: networkId, name: "", symbol:tokenName, priceURL:""})
          .then(response => {response.data})
          .catch(error => console.error(error));
    }
    const handleNetworkChange = (e) => {
        console.log("assets network", e.target.value)
        if (e.target.value == "Mantle") {
            setNetworkId(5000)
        } else if (e.target.value == "Ethereum") {
            setNetworkId(1)
        } else if (e.target.value == "Ethereum") {
            setNetworkId(137)
        }
    }
    const handleInputChange = (e) => {
        console.log("assets address", e.target.value)
        setContractAddress(e.target.value)
    }
    const handleTokenName = (e) => {
        console.log("assets token name", e.target.value)
        setTokenName(e.target.value)
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>DAOmocles</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navbar
                daoname={daoname}
                daoaccess={daoaccess}
            />
            <SettingNavbar
                daoname={daoname}
                daoaccess={daoaccess}
            />
            <div className={styles.settings} style={{ height: "auto", marginBottom: "3rem" }}>
                <div className={styles.settingsgrid}>
                    {tokenAssets.assets.map((item) => {
                        return <>
                            <div > Network</div>
                            <div >{item.network}</div>
                            <div >Contract Address</div>
                            <div >{item.contractAddress}</div>
                            <div >Token Name</div>
                            <div >{item.tokenName}</div>
                            <div className="divider" style={{ color: "white" }}></div>
                            <div className="divider"></div>
                        </>
                    })}
                    <>
                        <div > Network</div>
                        <div > &nbsp;
                            <select
                                className="px-3 py-2 h-3/1 bg-gray-50 border border-black rounded-xl text-black"
                                name="Networks" id="networks"
                                onChange={handleNetworkChange}
                            >
                                <option value="Ethereum">Ethereum</option>
                                <option value="Polygon">Polygon</option>
                                <option value="Mantle">Mantle</option>
                                <option value="Metis">Metis</option>
                            </select>
                            &emsp;
                        </div>
                        <div >Contract Address</div>
                        <div >
                            <input
                                type="text" id="default-input"
                                style={{ marginLeft: "3px" }} className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-xl focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
                                onChange={handleInputChange}
                            ></input>
                        </div>
                        <div >Token Name</div>
                        <div style={{ color: "gray" }}>
                            <input
                                type="text" id="default-input"
                                style={{ marginLeft: "3px" }} className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-xl focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
                                onChange={handleTokenName}
                            ></input>
                        </div>
                        <div >
                            <div className="divider"></div>
                        </div>
                    </>

                    {/* <div >Treasury Address</div>
                    <div >
                        <input type="text" id="default-input" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-xl focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"></input>
                    </div> */}
                </div>
                <button
                    className={styles.confirmbutton}
                    style={{ width: "200px" }}
                    onClick={() => {
                        onAddToken()
                        console.log("button clicked")
                    }}
                >
                    + Add Another Token
                </button>
                {/* <div>
                    <button className={styles.confirmbutton}>Confirm</button>
                </div> */}
            </div>
            {/* {true && (
                <main className="w-full flex flex-col py-4 flex-grow max-w-8xl items-center">
                    <div className="w-3/4 border-2 border-blue-600 rounded-xl p-3 mt-10">
                        <div className="flex flex-col justify-center">
                            Assets Information

                        </div>
                    </div>
                </main>
            )} */}
        </div>
    );
}